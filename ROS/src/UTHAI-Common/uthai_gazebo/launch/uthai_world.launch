<?xml version="1.0" ?>
<launch>
  <arg name="position_controller" default="true"/>
  <arg name="velocity_controller" default="false"/>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find uthai_gazebo)/worlds/empty.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find uthai_description)/urdf/uthai.urdf.xacro'" />
  
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model uthai -z 0.764 -param robot_description"/>
  <!-- ros_control robotis humanoid launch file -->
  <group if ="$(arg position_controller)">
    <include file="$(find uthai_gazebo)/launch/position_controller.launch" />
  </group>
  <group if ="$(arg velocity_controller)">
    <include file="$(find uthai_gazebo)/launch/velocity_controller.launch" />
  </group>
  <!-- <node name="uthai_walker" pkg="uthai_gazebo" type="walker.py" /> -->
</launch>
